1
00:00:02,210 --> 00:00:05,180
So let's dive into styling.
2

2
00:00:05,180 --> 00:00:06,880
And here you learned before
3

3
00:00:06,880 --> 00:00:10,430
that there is no CSS support in the React Native,
4

4
00:00:10,430 --> 00:00:12,390
so we don't add CSS files
5

5
00:00:12,390 --> 00:00:15,460
or use the CSS language in general,
6

6
00:00:15,460 --> 00:00:19,640
but you learned that we have two main ways of adding styling
7

7
00:00:19,640 --> 00:00:21,470
by either adding styles in line,
8

8
00:00:21,470 --> 00:00:24,650
by passing a style object to props
9

9
00:00:24,650 --> 00:00:26,640
or by defining a separate object
10

10
00:00:26,640 --> 00:00:29,173
which is then also passed through props.
11

11
00:00:30,590 --> 00:00:33,830
Now we do define our styles in JavaScript then
12

12
00:00:33,830 --> 00:00:36,950
but the JavaScript properties we can set
13

13
00:00:36,950 --> 00:00:40,800
are inspired by the CSS language
14

14
00:00:40,800 --> 00:00:43,470
though it's only a subset of the properties
15

15
00:00:43,470 --> 00:00:45,950
and features supported by CSS
16

16
00:00:45,950 --> 00:00:50,093
and not all the names are exactly the same, as you will see.
17

17
00:00:51,160 --> 00:00:53,890
But let's now see how styles can be applied.
18

18
00:00:53,890 --> 00:00:57,300
For that, we can use the style prop,
19

19
00:00:57,300 --> 00:01:00,230
which is not supported on all elements,
20

20
00:01:00,230 --> 00:01:03,120
but on some elements, for example on the view,
21

21
00:01:03,120 --> 00:01:04,593
but also on the text.
22

22
00:01:05,470 --> 00:01:08,410
For example, here on let's say this text here,
23

23
00:01:08,410 --> 00:01:10,560
we can add the style prop.
24

24
00:01:10,560 --> 00:01:14,103
And then as a value, you can pass a JavaScript object.
25

25
00:01:15,120 --> 00:01:16,810
And in this object you can set
26

26
00:01:16,810 --> 00:01:21,810
all the supported style properties and React Native decides
27

27
00:01:21,870 --> 00:01:24,150
which properties are supported.
28

28
00:01:24,150 --> 00:01:28,100
And these are the properties that are similar
29

29
00:01:28,100 --> 00:01:31,853
to the CSS properties, but not exactly the same.
30

30
00:01:32,920 --> 00:01:36,720
For example, here on this text, we could add a margin.
31

31
00:01:36,720 --> 00:01:38,990
And as you see, as I start typing,
32

32
00:01:38,990 --> 00:01:42,653
we get this nice auto completion here in VS Code.
33

33
00:01:43,620 --> 00:01:46,550
We get this automatically because VS Code understands
34

34
00:01:46,550 --> 00:01:49,980
which kind of properties can be set on this object
35

35
00:01:49,980 --> 00:01:52,503
that is passed to the style prop.
36

36
00:01:54,442 --> 00:01:56,230
Now, here we could add a margin
37

37
00:01:56,230 --> 00:01:59,930
either in one specific direction or in multiple directions
38

38
00:01:59,930 --> 00:02:01,696
by combining multiple properties
39

39
00:02:01,696 --> 00:02:04,823
or in all directions by setting margin.
40

40
00:02:06,070 --> 00:02:08,850
Now different style properties
41

41
00:02:08,850 --> 00:02:11,240
need different kinds of values.
42

42
00:02:11,240 --> 00:02:13,170
And you will see many examples
43

43
00:02:13,170 --> 00:02:17,000
and learn which kind of value goes into which style property
44

44
00:02:17,000 --> 00:02:18,920
throughout this course.
45

45
00:02:18,920 --> 00:02:22,630
Margin, for example, typically wants a number
46

46
00:02:22,630 --> 00:02:25,890
and this number will then be translated to pixels
47

47
00:02:25,890 --> 00:02:27,880
which are automatically adjusted
48

48
00:02:27,880 --> 00:02:30,163
to the device pixel density.
49

49
00:02:31,300 --> 00:02:33,810
For example, here we could enter 16
50

50
00:02:33,810 --> 00:02:36,770
to have a margin of 16 pixels.
51

51
00:02:36,770 --> 00:02:39,700
If we save this, we got some spacing around this.
52

52
00:02:39,700 --> 00:02:41,570
Now it's not super good to see
53

53
00:02:41,570 --> 00:02:45,623
because we don't know exactly where the text box ends.
54

54
00:02:46,510 --> 00:02:50,100
To make this a bit more visible, we could add a border.
55

55
00:02:50,100 --> 00:02:54,020
Now in Vanilla CSS, you could add a border,
56

56
00:02:54,020 --> 00:02:55,943
like this for example.
57

57
00:02:57,150 --> 00:03:00,600
This would add a red border with one pixel width
58

58
00:03:00,600 --> 00:03:04,500
around an element in Vanilla CSS.
59

59
00:03:04,500 --> 00:03:05,980
But if I type this kind of code
60

60
00:03:05,980 --> 00:03:08,950
and saved this here in React Native,
61

61
00:03:08,950 --> 00:03:11,600
we actually got no effect here,
62

62
00:03:11,600 --> 00:03:14,300
and I got a error here in the terminal
63

63
00:03:14,300 --> 00:03:18,750
and a warning here on my simulator.
64

64
00:03:18,750 --> 00:03:21,000
We can click on this to get more details
65

65
00:03:21,000 --> 00:03:25,803
and we see that this is an invalid value for border.
66

66
00:03:26,920 --> 00:03:30,110
Actually the key border already is invalid.
67

67
00:03:30,110 --> 00:03:31,340
So it's not even the value
68

68
00:03:31,340 --> 00:03:33,653
but border is not a supported key.
69

69
00:03:36,370 --> 00:03:37,710
The reason for this is simply
70

70
00:03:37,710 --> 00:03:40,340
that this border property doesn't exist.
71

71
00:03:40,340 --> 00:03:44,920
I mentioned that the styling language is inspired by CSS
72

72
00:03:44,920 --> 00:03:47,913
and close to CSS, but it's not exactly the same.
73

73
00:03:49,050 --> 00:03:51,220
Instead, as we type border,
74

74
00:03:51,220 --> 00:03:54,653
we see that various properties exist, which we can set.
75

75
00:03:55,690 --> 00:03:58,570
For example, we can set a border with property
76

76
00:03:58,570 --> 00:04:00,840
and this again wants a number to set
77

77
00:04:00,840 --> 00:04:05,143
a certain border width in pixels, like one, one pixel,
78

78
00:04:06,290 --> 00:04:08,510
or two or whatever you want.
79

79
00:04:08,510 --> 00:04:11,540
And then we can also set a bordered color.
80

80
00:04:11,540 --> 00:04:14,740
Now this does not want a number, but instead of string,
81

81
00:04:14,740 --> 00:04:18,450
and in this string, you could define a hex code value
82

82
00:04:23,280 --> 00:04:26,090
Or you provide one of the supported shortcuts
83

83
00:04:26,090 --> 00:04:30,770
like red or blue or green or black and white.
84

84
00:04:30,770 --> 00:04:32,403
And here I will go for red.
85

85
00:04:33,300 --> 00:04:36,360
And this will now add a two pixel, white, red border
86

86
00:04:36,360 --> 00:04:37,743
around this text.
87

87
00:04:38,590 --> 00:04:40,700
Now I'll press the auto format shortcut
88

88
00:04:40,700 --> 00:04:43,823
to make this a bit easier to read and then save this.
89

89
00:04:45,000 --> 00:04:47,853
And with this, we now got a border around this text.
90

90
00:04:48,870 --> 00:04:51,900
The border is pretty close to the text
91

91
00:04:51,900 --> 00:04:54,780
but thankfully we can also add some padding,
92

92
00:04:54,780 --> 00:04:56,960
padding just as in the browser,
93

93
00:04:56,960 --> 00:04:59,653
is the spacing inside of an element.
94

94
00:05:00,790 --> 00:05:04,620
So here we could add a padding of let's say 16 again,
95

95
00:05:04,620 --> 00:05:07,960
16 pixels, just as for the margin.
96

96
00:05:07,960 --> 00:05:12,040
And if we save this and auto format again
97

97
00:05:12,040 --> 00:05:16,670
to improve readability, now we got some internal spacing.
98

98
00:05:16,670 --> 00:05:19,640
Now definitely feel free to play around more
99

99
00:05:19,640 --> 00:05:22,610
with those style properties.
100

100
00:05:22,610 --> 00:05:25,140
And of course also take a look at the official docs
101

101
00:05:25,140 --> 00:05:27,210
to learn more about styling if you want to,
102

102
00:05:27,210 --> 00:05:29,500
but you will see plenty of styling examples
103

103
00:05:29,500 --> 00:05:30,600
throughout the course.
104

104
00:05:31,600 --> 00:05:35,542
These style properties were all about styling
105

105
00:05:35,542 --> 00:05:39,920
the element itself that holds a certain piece of content.
106

106
00:05:39,920 --> 00:05:43,030
We will later also learn about style properties
107

107
00:05:43,030 --> 00:05:47,320
that help us with laying out multiple components
108

108
00:05:47,320 --> 00:05:51,240
and with achieving a certain overall look.
109

109
00:05:51,240 --> 00:05:54,650
But again, that is something we will explore later.
110

110
00:05:54,650 --> 00:05:55,483
For the moment,
111

111
00:05:55,483 --> 00:05:58,570
I wanna leave this in-line styling approach though.
112

112
00:05:58,570 --> 00:06:02,130
This approach of defining the styles in the same line
113

113
00:06:02,130 --> 00:06:04,263
as we define this component.
114

114
00:06:05,350 --> 00:06:08,920
Because whilst this is possible and allowed,
115

115
00:06:08,920 --> 00:06:12,423
it's rarely the best way of adding styling.
116

116
00:06:13,340 --> 00:06:16,410
So typically we should go for a style sheet objects.
117

117
00:06:16,410 --> 00:06:17,380
The reason for this,
118

118
00:06:17,380 --> 00:06:20,110
is that this allows us to clearly separate
119

119
00:06:20,110 --> 00:06:23,140
our JSX code and our styling code
120

120
00:06:23,140 --> 00:06:26,240
and it also makes our styles reusable.
121

121
00:06:26,240 --> 00:06:28,280
If we define styles in line
122

122
00:06:28,280 --> 00:06:30,670
and I want the same styling on this text,
123

123
00:06:30,670 --> 00:06:33,530
I have to copy and paste this,
124

124
00:06:33,530 --> 00:06:36,090
so that I can add my style prop here
125

125
00:06:36,090 --> 00:06:38,150
and add the same styling,
126

126
00:06:38,150 --> 00:06:40,700
and I'll auto format this to make it more readable.
127

127
00:06:41,950 --> 00:06:45,740
So now I had to copy and paste to replicate this style.
128

128
00:06:45,740 --> 00:06:48,990
And that is typically something you wanna avoid.
129

129
00:06:48,990 --> 00:06:50,220
What you should instead do
130

130
00:06:50,220 --> 00:06:53,320
is create a new style sheet object.
131

131
00:06:53,320 --> 00:06:56,430
Or if you already have one, as we have it here,
132

132
00:06:56,430 --> 00:06:59,613
you go to this object and you add a new property.
133

133
00:07:00,710 --> 00:07:02,890
We already have the container property,
134

134
00:07:02,890 --> 00:07:06,140
now on the same level, I'm adding another property.
135

135
00:07:06,140 --> 00:07:11,140
The name is up to you and I'll just name it dummy text.
136

136
00:07:11,310 --> 00:07:13,800
Again, this is totally up to you.
137

137
00:07:13,800 --> 00:07:18,520
What's not up to you is what you set as a value though.
138

138
00:07:18,520 --> 00:07:20,910
The value should be an object,
139

139
00:07:20,910 --> 00:07:22,800
as we see it here for a container.
140

140
00:07:22,800 --> 00:07:26,653
And then in this object, you define your style properties.
141

141
00:07:27,560 --> 00:07:31,170
So here I could now set my margin and so on.
142

142
00:07:31,170 --> 00:07:36,170
So I can set margin 16, border width two and border color,
143

143
00:07:38,570 --> 00:07:39,983
I'll set this to red.
144

144
00:07:41,640 --> 00:07:45,570
And I will all set my padding and the order does not matter.
145

145
00:07:45,570 --> 00:07:48,280
I just group margin and padding together here,
146

146
00:07:48,280 --> 00:07:50,250
since they're both about spacing,
147

147
00:07:50,250 --> 00:07:52,300
but we could also add padding here,
148

148
00:07:52,300 --> 00:07:53,683
and it wouldn't matter.
149

149
00:07:54,940 --> 00:07:57,010
Of course I could have also just copied down
150

150
00:07:57,010 --> 00:07:58,493
my object from up here.
151

151
00:07:59,560 --> 00:08:03,120
Now with such a style object to find down here,
152

152
00:08:03,120 --> 00:08:06,020
we can use it here in our JSX code
153

153
00:08:06,020 --> 00:08:08,243
as this container is being used.
154

154
00:08:09,600 --> 00:08:12,260
It is defined down here, but you can still use it
155

155
00:08:12,260 --> 00:08:14,997
in JSX because this only gets executed
156

156
00:08:14,997 --> 00:08:18,563
after the entire code file has been parsed basically.
157

157
00:08:20,060 --> 00:08:22,690
So here we can now replace this object
158

158
00:08:22,690 --> 00:08:24,390
by referring to styles.dummytext
159

159
00:08:26,040 --> 00:08:28,713
and I get nice auto completion for this as well.
160

160
00:08:29,900 --> 00:08:31,900
And I'll do this here as well.
161

161
00:08:31,900 --> 00:08:35,240
And now, yes, we had to copy the word, dummy text,
162

162
00:08:35,240 --> 00:08:37,820
but of course it's way less to copy.
163

163
00:08:37,820 --> 00:08:39,770
And if we ever adjust the style,
164

164
00:08:39,770 --> 00:08:42,230
for example we changed the color to blue,
165

165
00:08:42,230 --> 00:08:44,750
we don't have to do this in two places
166

166
00:08:44,750 --> 00:08:46,640
because the name didn't change,
167

167
00:08:46,640 --> 00:08:49,263
we just had to do it in one place instead.
168

168
00:08:50,100 --> 00:08:52,803
So if I save this, we now got a blue border.
169

169
00:08:53,920 --> 00:08:56,493
And that's how we use such a style sheet object.
170

170
00:08:57,750 --> 00:09:00,040
Now, why is it a style sheet object?
171

171
00:09:00,040 --> 00:09:04,060
So an object created with help of style sheet create
172

172
00:09:04,060 --> 00:09:07,040
which is a built-in method on this built-in object
173

173
00:09:07,040 --> 00:09:09,053
which is imported from React Native.
174

174
00:09:10,050 --> 00:09:12,320
Well, we could have also created
175

175
00:09:12,320 --> 00:09:16,243
a styles object like this, and set our styles there,
176

176
00:09:17,350 --> 00:09:20,009
but using such a style sheet object has the advantage
177

177
00:09:20,009 --> 00:09:22,600
that we get convenient auto completion
178

178
00:09:22,600 --> 00:09:25,860
as we type our style properties here.
179

179
00:09:25,860 --> 00:09:28,710
And that makes our development life a bit easier.
180

180
00:09:28,710 --> 00:09:32,790
In addition, React Native could potentially optimize
181

181
00:09:32,790 --> 00:09:35,740
style sheet creation and management internally
182

182
00:09:35,740 --> 00:09:38,140
and pick up style sheet objects like this.
183

183
00:09:38,140 --> 00:09:39,970
This is not done right now though,
184

184
00:09:39,970 --> 00:09:42,883
so for the moment, the main reason is the auto completion.
185

185
00:09:44,080 --> 00:09:47,970
But with that, we now learn some important styling basics
186

186
00:09:47,970 --> 00:09:52,270
and some important basics about core components.
187

187
00:09:52,270 --> 00:09:53,920
I would say, as a next step,
188

188
00:09:53,920 --> 00:09:57,010
we should take a closer look at creating layouts
189

189
00:09:57,010 --> 00:09:59,740
and positioning multiple elements
190

190
00:09:59,740 --> 00:10:02,210
because typically you don't just want
191

191
00:10:02,210 --> 00:10:05,860
a couple of centered pieces of text like this.
192

192
00:10:05,860 --> 00:10:08,561
Typically you are going for different layouts
193

193
00:10:08,561 --> 00:10:11,050
and we need to know how we can create
194

194
00:10:11,050 --> 00:10:12,607
such layouts therefore.