1
00:00:02,134 --> 00:00:02,967
[Maximilian SchwarzmÃ¼ller] So again.
2

2
00:00:02,967 --> 00:00:05,230
We made good progress here.
3

3
00:00:05,230 --> 00:00:08,010
To conclude this section.
4

4
00:00:08,010 --> 00:00:09,580
I wanna improve the overall look
5

5
00:00:09,580 --> 00:00:13,120
and feel of this application a little bit though.
6

6
00:00:13,120 --> 00:00:17,660
And I wanna start by actually outsourcing this input part
7

7
00:00:17,660 --> 00:00:21,040
into a modal, modals are these overlays.
8

8
00:00:21,040 --> 00:00:23,600
That typically slide up or pop up,
9

9
00:00:23,600 --> 00:00:27,230
on mobile apps that overlay the main screen.
10

10
00:00:27,230 --> 00:00:28,920
And allow you to take some action,
11

11
00:00:28,920 --> 00:00:31,300
after which they disappear.
12

12
00:00:31,300 --> 00:00:35,750
Adding such a modal, and adding the input logic here
13

13
00:00:35,750 --> 00:00:37,000
into such a model,
14

14
00:00:37,000 --> 00:00:40,350
is thankfully pretty easy in React Native.
15

15
00:00:40,350 --> 00:00:43,593
Because it comes with a built in modal component.
16

16
00:00:44,540 --> 00:00:47,460
So, all you have to do in the goal input component,
17

17
00:00:47,460 --> 00:00:49,530
where I want to create that modal.
18

18
00:00:49,530 --> 00:00:53,470
Is, you import modal from React Native.
19

19
00:00:53,470 --> 00:00:55,600
And then you wrap that,
20

20
00:00:55,600 --> 00:00:59,370
around the content that should go into the modal.
21

21
00:00:59,370 --> 00:01:00,810
In my case here, that's the view
22

22
00:01:00,810 --> 00:01:02,563
with the text input and the button.
23

23
00:01:03,650 --> 00:01:07,930
If you do that, we have this look here.
24

24
00:01:07,930 --> 00:01:10,310
So our list of goals seems to be gone
25

25
00:01:10,310 --> 00:01:12,280
and the styling is a bit off.
26

26
00:01:12,280 --> 00:01:15,890
And as I add goals, I don't see them.
27

27
00:01:15,890 --> 00:01:16,910
The reason for that is,
28

28
00:01:16,910 --> 00:01:18,930
that we actually see the modal here.
29

29
00:01:18,930 --> 00:01:22,260
The overlay, which we have on the entire screen.
30

30
00:01:22,260 --> 00:01:25,490
Now, of course the modal shouldn't always be there though.
31

31
00:01:25,490 --> 00:01:27,340
Instead it would be nice to have a button
32

32
00:01:27,340 --> 00:01:28,860
on the start screen,
33

33
00:01:28,860 --> 00:01:30,740
that allows us to open the modal
34

34
00:01:30,740 --> 00:01:32,690
when we want to add a new goal.
35

35
00:01:32,690 --> 00:01:34,820
And then to have a button that allows us to
36

36
00:01:34,820 --> 00:01:37,933
close this modal here on this modal screen.
37

37
00:01:39,140 --> 00:01:40,750
Now let's start with that button
38

38
00:01:40,750 --> 00:01:43,030
that opens the modal.
39

39
00:01:43,030 --> 00:01:45,830
For this, I'll go back to App.js,
40

40
00:01:45,830 --> 00:01:48,205
and I want to add that button there.
41

41
00:01:48,205 --> 00:01:50,336
We still have the goal input component.
42

42
00:01:50,336 --> 00:01:53,920
But above that component, I wanna add a button.
43

43
00:01:53,920 --> 00:01:58,300
And for this I'll use the good old built in button.
44

44
00:01:58,300 --> 00:02:01,440
Though, of course we could also import "pressable".
45

45
00:02:01,440 --> 00:02:02,870
And build our own button,
46

46
00:02:02,870 --> 00:02:05,030
as you learned it a couple of minutes ago.
47

47
00:02:05,030 --> 00:02:07,760
Because the button here in the end, all it just
48

48
00:02:07,760 --> 00:02:11,630
uses is the "pressable" component or those old "touchable"
49

49
00:02:11,630 --> 00:02:13,550
components internally.
50

50
00:02:13,550 --> 00:02:14,840
But here, to save some time,
51

51
00:02:14,840 --> 00:02:18,320
I'll use the prebuilt button instead of building my own one.
52

52
00:02:18,320 --> 00:02:22,977
And I'll give this button a title off, "add new goal".
53

53
00:02:24,060 --> 00:02:27,800
I'll also give the button a color, through the color prop.
54

54
00:02:27,800 --> 00:02:31,040
Because "button" doesn't take a style prop.
55

55
00:02:31,040 --> 00:02:32,700
It doesn't support it.
56

56
00:02:32,700 --> 00:02:34,740
Because it is already pre-styled.
57

57
00:02:34,740 --> 00:02:37,360
That's why you can't influence it too much.
58

58
00:02:37,360 --> 00:02:40,500
If you do want to style your own button, you have to
59

59
00:02:40,500 --> 00:02:43,210
build your own button with the "pressable" component.
60

60
00:02:43,210 --> 00:02:45,963
And then some text and views inside of it.
61

61
00:02:47,200 --> 00:02:49,810
Here, with the pre-built button, we can change the
62

62
00:02:49,810 --> 00:02:52,300
color through the color prop though.
63

63
00:02:52,300 --> 00:02:55,220
And I will set color here to,
64

64
00:02:55,220 --> 00:02:56,743
actually to a string.
65

65
00:02:58,200 --> 00:03:00,800
And I will use the same purple,
66

66
00:03:00,800 --> 00:03:03,700
as I used here in goal item.
67

67
00:03:03,700 --> 00:03:06,040
For the background of my goals.
68

68
00:03:06,040 --> 00:03:08,243
I'll use this purple color here.
69

69
00:03:09,100 --> 00:03:13,573
And set this as a color of this button here.
70

70
00:03:14,500 --> 00:03:15,333
Like this.
71

71
00:03:16,610 --> 00:03:17,970
So now we have the button.
72

72
00:03:17,970 --> 00:03:20,280
But of course, we don't see the button if
73

73
00:03:20,280 --> 00:03:21,113
we save this.
74

74
00:03:21,113 --> 00:03:23,920
Because we still have the modal everywhere.
75

75
00:03:23,920 --> 00:03:27,580
Now this button should control the modal visibility.
76

76
00:03:27,580 --> 00:03:29,150
And for this we need "state",
77

77
00:03:29,150 --> 00:03:32,350
because the modal should either be visible or not.
78

78
00:03:32,350 --> 00:03:35,920
And that's a typical case for using "state".
79

79
00:03:35,920 --> 00:03:37,150
So, here in the app component,
80

80
00:03:37,150 --> 00:03:40,110
we can add a new piece of "state".
81

81
00:03:40,110 --> 00:03:43,260
And use, "use state" to initialize it and set it to
82

82
00:03:43,260 --> 00:03:44,240
false initially,
83

83
00:03:44,240 --> 00:03:48,970
because that will be my "modal is visible" state
84

84
00:03:50,120 --> 00:03:53,840
And the "set modal is visible" updating function,
85

85
00:03:53,840 --> 00:03:55,890
will allow me to change it.
86

86
00:03:55,890 --> 00:03:58,930
And initially the modal should not be visible.
87

87
00:03:58,930 --> 00:04:02,160
Now we wanna change this whenever the button is clicked.
88

88
00:04:02,160 --> 00:04:04,760
So for this, I'll add a "function" here,
89

89
00:04:04,760 --> 00:04:07,573
maybe here, the exact position doesn't matter.
90

90
00:04:08,620 --> 00:04:13,387
Which I will name "start at goal handler".
91

91
00:04:14,430 --> 00:04:16,927
And in this function I want to set,
92

92
00:04:16,927 --> 00:04:18,820
"set modal is visible" to true.
93

93
00:04:18,820 --> 00:04:21,500
Because I wanna show the modal.
94

94
00:04:21,500 --> 00:04:23,970
Now, this "start at goal handler" function,
95

95
00:04:23,970 --> 00:04:26,150
should now be connected to this button.
96

96
00:04:26,150 --> 00:04:27,290
And this button,
97

97
00:04:27,290 --> 00:04:30,960
being a built in component has this on press prop
98

98
00:04:30,960 --> 00:04:35,220
Which we now use to connect it to "start at goal handler".
99

99
00:04:35,220 --> 00:04:39,860
Now to show the modal only when this state is true.
100

100
00:04:39,860 --> 00:04:43,410
We could now render goal input conditionally,
101

101
00:04:43,410 --> 00:04:46,690
as we would do a it in most React Web Apps.
102

102
00:04:46,690 --> 00:04:49,120
We can add curly braces around that.
103

103
00:04:49,120 --> 00:04:51,940
And then check our "modal is visible" state.
104

104
00:04:51,940 --> 00:04:53,100
And if it's true,
105

105
00:04:53,100 --> 00:04:55,040
then we render goal input.
106

106
00:04:55,040 --> 00:04:58,323
Which internally contains this modal.
107

107
00:05:00,560 --> 00:05:02,923
If we do It like this and we save everything.
108

108
00:05:03,780 --> 00:05:05,580
Indeed we see the button here.
109

109
00:05:05,580 --> 00:05:07,090
And if I press the button,
110

110
00:05:07,090 --> 00:05:08,970
the modal appears
111

111
00:05:08,970 --> 00:05:10,960
But the model then is just there.
112

112
00:05:10,960 --> 00:05:13,170
There is no animation and nothing.
113

113
00:05:13,170 --> 00:05:15,157
And therefore that's typically not,
114

114
00:05:15,157 --> 00:05:16,323
how you would do that.
115

115
00:05:17,390 --> 00:05:21,440
Instead of just showing or hiding this component like this.
116

116
00:05:21,440 --> 00:05:26,030
A better approach is to embrace some of the props, "modal".
117

117
00:05:26,030 --> 00:05:29,023
This built-in modal component, offers to you.
118

118
00:05:29,870 --> 00:05:34,130
To be precise, this "modal" component has a "visible" prop.
119

119
00:05:34,130 --> 00:05:36,160
And if set to "true", the model is visible,
120

120
00:05:36,160 --> 00:05:37,883
If set to "false", it's not.
121

121
00:05:39,000 --> 00:05:40,870
Now, this is useful.
122

122
00:05:40,870 --> 00:05:45,870
Because in addition, modal also has a animation type prop.
123

123
00:05:46,700 --> 00:05:49,740
Where you can set how it will be animated.
124

124
00:05:49,740 --> 00:05:52,730
That there maybe is no animation at all.
125

125
00:05:52,730 --> 00:05:54,350
That it should fade.
126

126
00:05:54,350 --> 00:05:56,600
Or that it should slide in.
127

127
00:05:56,600 --> 00:05:58,363
And I will go for sliding.
128

128
00:05:59,250 --> 00:06:01,437
And now I just expect to get the,
129

129
00:06:01,437 --> 00:06:05,503
"should it be displayed or not" information, via props.
130

130
00:06:06,360 --> 00:06:09,220
So here I'll access "props.visible",
131

131
00:06:09,220 --> 00:06:12,040
though this prop name here is up to you.
132

132
00:06:12,040 --> 00:06:14,017
It could also be "show modal".
133

133
00:06:14,920 --> 00:06:18,090
But I'll choose "visible".
134

134
00:06:18,090 --> 00:06:21,240
And now we have to set this prop on goal input,
135

135
00:06:21,240 --> 00:06:23,110
in the app component.
136

136
00:06:23,110 --> 00:06:26,290
So here, I'll now add this "visible" prop.
137

137
00:06:26,290 --> 00:06:28,670
And set this equal to "modal is visible",
138

138
00:06:28,670 --> 00:06:30,103
which is true or false.
139

139
00:06:31,210 --> 00:06:33,450
And with that, if we now saved this.
140

140
00:06:33,450 --> 00:06:34,910
And we force a reload,
141

141
00:06:34,910 --> 00:06:37,053
by pressing R here in the terminal.
142

142
00:06:38,250 --> 00:06:40,063
Now the modal slides up.
143

143
00:06:41,570 --> 00:06:44,320
Of course we can't dismiss it at the moment.
144

144
00:06:44,320 --> 00:06:48,150
And the styling in there also is a bit off.
145

145
00:06:48,150 --> 00:06:51,600
So, therefore let's next focus on that styling.
146

146
00:06:51,600 --> 00:06:53,210
And let's then make sure that,
147

147
00:06:53,210 --> 00:06:55,693
we can also close this modal.