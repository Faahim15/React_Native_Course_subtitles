1
00:00:02,090 --> 00:00:04,860
Now to fix this scrolling issue
2

2
00:00:04,860 --> 00:00:05,840
with the FlatList
3

3
00:00:05,840 --> 00:00:09,130
where the content leaves our screen boundaries
4

4
00:00:09,130 --> 00:00:12,680
a good solution is to wrap a container around the FlatList
5

5
00:00:12,680 --> 00:00:15,390
which we already do with this View.
6

6
00:00:15,390 --> 00:00:18,140
And to then add some styling to that container
7

7
00:00:18,140 --> 00:00:21,300
that kind of controls how much space this FlatList
8

8
00:00:21,300 --> 00:00:22,610
can take up.
9

9
00:00:22,610 --> 00:00:25,270
Because by default, a FlatList works such
10

10
00:00:25,270 --> 00:00:28,500
that it basically has an infinite height.
11

11
00:00:28,500 --> 00:00:30,780
Now, if we restrict that height though
12

12
00:00:30,780 --> 00:00:34,000
through a parent container that we add around it
13

13
00:00:34,000 --> 00:00:36,630
then the FlatList will become scrollable
14

14
00:00:36,630 --> 00:00:38,400
inside of that container.
15

15
00:00:38,400 --> 00:00:41,380
But with that, we can avoid that it goes
16

16
00:00:41,380 --> 00:00:43,913
beyond the boundaries of our device.
17

17
00:00:44,860 --> 00:00:48,750
So we could then add, let's say, listContainer:
18

18
00:00:48,750 --> 00:00:52,680
style object to the game screen, and add flex: 1,
19

19
00:00:52,680 --> 00:00:55,280
on that and add a comma here.
20

20
00:00:55,280 --> 00:00:57,220
To make sure that this container
21

21
00:00:57,220 --> 00:01:00,290
takes up as much space as possible.
22

22
00:01:00,290 --> 00:01:04,373
I'll also add a little bit of padding around it of 16 here.
23

23
00:01:05,500 --> 00:01:08,540
And then this listContainer style property is assigned
24

24
00:01:08,540 --> 00:01:12,263
to this View here, like this.
25

25
00:01:13,680 --> 00:01:15,670
Once we do that, you will see that
26

26
00:01:15,670 --> 00:01:19,800
if we start a new round and we keep on guessing here
27

27
00:01:19,800 --> 00:01:23,120
and we hopefully don't guess the number too early.
28

28
00:01:23,120 --> 00:01:25,260
Now I can still scroll here
29

29
00:01:25,260 --> 00:01:28,260
but now I can scroll the items into View
30

30
00:01:28,260 --> 00:01:30,610
and they don't go outside of my screen
31

31
00:01:30,610 --> 00:01:33,890
which of course is better than what we had before.
32

32
00:01:33,890 --> 00:01:36,290
So now this also works.
33

33
00:01:36,290 --> 00:01:37,360
As a last step,
34

34
00:01:37,360 --> 00:01:39,820
we can now count the number of rounds
35

35
00:01:39,820 --> 00:01:43,003
so that we can also show it here on the Game Over screen.
36

36
00:01:43,870 --> 00:01:46,230
Now counting the number of rounds to show it
37

37
00:01:46,230 --> 00:01:47,690
on the game over screen
38

38
00:01:47,690 --> 00:01:50,380
is at actually not too tricky.
39

39
00:01:50,380 --> 00:01:51,550
In the game screen,
40

40
00:01:51,550 --> 00:01:55,300
we are already logging all our rounds
41

41
00:01:55,300 --> 00:01:58,090
and in the end the length of that list
42

42
00:01:58,090 --> 00:02:01,190
is basically the number of rounds it took the phone,
43

43
00:02:01,190 --> 00:02:04,250
the device to guess our number.
44

44
00:02:04,250 --> 00:02:05,700
So therefore all we have to do,
45

45
00:02:05,700 --> 00:02:08,600
is count the number of items in guess rounds.
46

46
00:02:08,600 --> 00:02:11,100
Once the game is finished
47

47
00:02:11,100 --> 00:02:13,820
and then report that to the app component
48

48
00:02:13,820 --> 00:02:17,320
because the app component in the end needs that number
49

49
00:02:17,320 --> 00:02:20,160
to pass it down to the Game Over screen
50

50
00:02:20,160 --> 00:02:23,623
because there we need to pass in our rounds number.
51

51
00:02:24,640 --> 00:02:27,600
Now for this, we already have the guess rounds state here
52

52
00:02:27,600 --> 00:02:28,790
in the app component
53

53
00:02:28,790 --> 00:02:32,310
which here is not an array, but a single number.
54

54
00:02:32,310 --> 00:02:33,780
And we wanna update this number
55

55
00:02:33,780 --> 00:02:35,560
as soon as the game is over.
56

56
00:02:35,560 --> 00:02:39,760
For this, we got this gameOverHandler already
57

57
00:02:39,760 --> 00:02:43,690
which is called by the game screen when the game is over.
58

58
00:02:43,690 --> 00:02:45,680
And we now just need to make sure
59

59
00:02:45,680 --> 00:02:49,130
that we report the numberOfRounds here,
60

60
00:02:49,130 --> 00:02:52,230
that we get this as a parameter value.
61

61
00:02:52,230 --> 00:02:56,340
So that in this function we can set guessRounds equal
62

62
00:02:56,340 --> 00:02:58,790
to this numberOfRounds.
63

63
00:02:58,790 --> 00:03:00,360
And now we just need to make sure
64

64
00:03:00,360 --> 00:03:04,280
that this parameter is passed into gameOverHandler.
65

65
00:03:04,280 --> 00:03:08,790
So into the onGameOver prop from inside GameScreen.
66

66
00:03:08,790 --> 00:03:13,790
So in GameScreen, where we do call this onGameOver function
67

67
00:03:14,510 --> 00:03:19,510
here, we wanna pass the guessRounds length as an argument
68

68
00:03:21,450 --> 00:03:23,040
because that's the number of items
69

69
00:03:23,040 --> 00:03:24,340
in this guess rounds array.
70

70
00:03:24,340 --> 00:03:25,900
And that is the number of rounds
71

71
00:03:25,900 --> 00:03:28,670
it took the device to guess our number
72

72
00:03:28,670 --> 00:03:31,420
we're passing this into the function which we receive
73

73
00:03:31,420 --> 00:03:33,320
through that onGameOver prop.
74

74
00:03:33,320 --> 00:03:37,423
And that turns out to be that gameOverHandler function.
75

75
00:03:38,350 --> 00:03:41,870
With that, if we save this and we start a new game.
76

76
00:03:41,870 --> 00:03:44,380
If I enter a number here
77

77
00:03:44,380 --> 00:03:48,750
and I then keep on guessing the game is over
78

78
00:03:48,750 --> 00:03:50,793
and now see six rounds here.
79

79
00:03:51,820 --> 00:03:53,340
So this works.
80

80
00:03:53,340 --> 00:03:54,820
And let's actually also test this
81

81
00:03:54,820 --> 00:03:58,470
on Android now and guess here.
82

82
00:03:58,470 --> 00:04:01,170
So we have three rounds, four rounds
83

83
00:04:01,170 --> 00:04:06,170
five rounds, six rounds, seven rounds, eight rounds.
84

84
00:04:06,730 --> 00:04:09,060
And this is reported here as well.
85

85
00:04:09,060 --> 00:04:11,560
So this works and last but not least
86

86
00:04:11,560 --> 00:04:14,250
to also quickly show that
87

87
00:04:14,250 --> 00:04:17,800
if I play this again up to the point
88

88
00:04:18,680 --> 00:04:22,210
where we have a scrollable list
89

89
00:04:22,210 --> 00:04:25,203
this scrolling all the works here on Android.
90

90
00:04:26,400 --> 00:04:28,800
So that is all working and with that
91

91
00:04:28,800 --> 00:04:31,653
the overall game is working as intended.