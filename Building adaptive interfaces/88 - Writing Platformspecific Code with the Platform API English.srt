1
00:00:02,157 --> 00:00:03,870
[Maximilian SchwarzmÃ¼ller] Now that was a lot
2

2
00:00:03,870 --> 00:00:08,870
about screen sizes and orientations and adjusting to changes
3

3
00:00:08,930 --> 00:00:12,570
in those sizes and orientations, and as mentioned before,
4

4
00:00:12,570 --> 00:00:15,710
definitely play around with those different tools
5

5
00:00:15,710 --> 00:00:19,040
to learn more about how they work and to optimize
6

6
00:00:19,040 --> 00:00:21,963
the UI for your personal preferences.
7

7
00:00:23,230 --> 00:00:27,160
What I wanna do here, is, I now wanna move away
8

8
00:00:27,160 --> 00:00:31,070
from adjusting to sizes and instead adjust
9

9
00:00:31,070 --> 00:00:35,933
to platforms because that is also quite interesting.
10

10
00:00:36,820 --> 00:00:41,260
Now for this I'm back here on Android and iOS portrait mode,
11

11
00:00:41,260 --> 00:00:43,440
but now let's say there are certain elements
12

12
00:00:43,440 --> 00:00:47,210
that should look different on the two platforms.
13

13
00:00:47,210 --> 00:00:49,400
To be honest here, I like the style,
14

14
00:00:49,400 --> 00:00:52,290
I like the similar style for both platforms
15

15
00:00:52,290 --> 00:00:55,970
and it is one of the advantages React Native offers
16

16
00:00:55,970 --> 00:00:58,240
that we can write one code base
17

17
00:00:58,240 --> 00:01:00,493
and target multiple platforms.
18

18
00:01:01,380 --> 00:01:04,470
But sometimes you want slightly different styles
19

19
00:01:04,470 --> 00:01:07,530
for different platforms and React Native
20

20
00:01:07,530 --> 00:01:09,763
also gives you tools for this case.
21

21
00:01:10,690 --> 00:01:15,690
Now, for that, let's say that in here, we wanted to change
22

22
00:01:16,060 --> 00:01:20,063
this title based on the platform we're running on.
23

23
00:01:21,420 --> 00:01:23,430
On Android, we might wanna keep it like this,
24

24
00:01:23,430 --> 00:01:26,223
but maybe on iOS, we wanna get rid of the border.
25

25
00:01:27,550 --> 00:01:28,730
How can we do that?
26

26
00:01:28,730 --> 00:01:31,510
Well, we go to the title, and now we wanna adjust
27

27
00:01:31,510 --> 00:01:35,020
the styles based on the underlying platform.
28

28
00:01:35,020 --> 00:01:38,630
For this, React Native gives us another API we can use,
29

29
00:01:38,630 --> 00:01:40,603
the platform API.
30

30
00:01:41,490 --> 00:01:44,350
The platform API allows us to detect
31

31
00:01:44,350 --> 00:01:47,020
on which platform we're running.
32

32
00:01:47,020 --> 00:01:50,070
Now, we don't need to set up a dynamic listener here
33

33
00:01:50,070 --> 00:01:52,340
because the platform is not going to change
34

34
00:01:52,340 --> 00:01:55,650
whilst the app is running, unlike the dimensions,
35

35
00:01:55,650 --> 00:01:58,930
instead, it is always the same for the entire lifetime
36

36
00:01:58,930 --> 00:02:02,450
of this app, so we can use this platform API anywhere
37

37
00:02:02,450 --> 00:02:05,163
and we don't need to React to any changes.
38

38
00:02:06,000 --> 00:02:08,170
And if we would want to get rid of the border,
39

39
00:02:08,170 --> 00:02:10,650
we could say here for "Border width",
40

40
00:02:10,650 --> 00:02:13,480
instead of always setting this to two,
41

41
00:02:13,480 --> 00:02:17,940
we use the platform API, and then on that platform API,
42

42
00:02:17,940 --> 00:02:22,730
we can access OS, this OS property, which is actually
43

43
00:02:22,730 --> 00:02:26,580
a string that's equal to Android, iOS, or,
44

44
00:02:26,580 --> 00:02:29,990
since you theoretically could also build desktop apps
45

45
00:02:29,990 --> 00:02:34,310
or web apps with React Native, Macos, Windows, and web.
46

46
00:02:34,310 --> 00:02:38,120
But we will focus on Android and iOS in this course.
47

47
00:02:38,120 --> 00:02:41,230
And if I only want to set a border width on Android,
48

48
00:02:41,230 --> 00:02:44,230
then I check if this is equal to Android, and then I set
49

49
00:02:44,230 --> 00:02:46,973
a border width of two, otherwise, of zero.
50

50
00:02:48,490 --> 00:02:51,410
With that, you see the border is gone on iOS,
51

51
00:02:51,410 --> 00:02:55,150
but it's still there on Android, and that's how easy it is
52

52
00:02:55,150 --> 00:02:57,283
to use that platform API.
53

53
00:02:58,130 --> 00:03:01,370
But when it comes to working with the platform API,
54

54
00:03:01,370 --> 00:03:04,940
there also are other ways of using it.
55

55
00:03:04,940 --> 00:03:08,210
You can use it in a turnery expression like this
56

56
00:03:08,210 --> 00:03:10,880
and there's nothing wrong with it, this is short and easy
57

57
00:03:10,880 --> 00:03:15,170
to read, but there also is an alternative way of using it.
58

58
00:03:15,170 --> 00:03:18,900
You can use the platform API object here
59

59
00:03:18,900 --> 00:03:21,443
and use the built-in select method.
60

60
00:03:22,420 --> 00:03:26,160
Now select wants an object as our parameter value,
61

61
00:03:26,160 --> 00:03:31,020
and in this object, you should specify an iOS property
62

62
00:03:31,020 --> 00:03:33,700
and an Android property.
63

63
00:03:33,700 --> 00:03:37,020
And then you can set different values that will eventually
64

64
00:03:37,020 --> 00:03:41,100
be returned by select for these different platforms.
65

65
00:03:41,100 --> 00:03:44,973
So here I could then set zero for iOS and two for Android.
66

66
00:03:45,850 --> 00:03:47,800
So that's simply a different way of writing
67

67
00:03:47,800 --> 00:03:49,950
such a conditional statement.
68

68
00:03:49,950 --> 00:03:54,160
In a place where you want a value that should be different
69

69
00:03:54,160 --> 00:03:57,840
for iOS or Android, you can use platform select
70

70
00:03:57,840 --> 00:04:01,150
to define the iOS and the Android values,
71

71
00:04:01,150 --> 00:04:04,680
and then select will return the appropriate value
72

72
00:04:04,680 --> 00:04:07,990
in its place based on the platform
73

73
00:04:07,990 --> 00:04:09,713
on which this code is executed.
74

74
00:04:10,560 --> 00:04:14,170
So with that we achieve the same result as before
75

75
00:04:14,170 --> 00:04:16,750
but this is maybe a bit more readable,
76

76
00:04:16,750 --> 00:04:20,323
or it's simply an alternative that you should also know.
77

77
00:04:22,010 --> 00:04:25,170
Now, another alternative, which I also wanna show you
78

78
00:04:25,170 --> 00:04:29,010
which can be very useful when writing platform specific code
79

79
00:04:29,010 --> 00:04:31,943
is to write platform specific files.
80

80
00:04:32,900 --> 00:04:36,440
Now, up to this point, we always added Component files
81

81
00:04:36,440 --> 00:04:39,413
like this, which had a Component name and ended with .JS,
82

82
00:04:40,260 --> 00:04:41,823
and that's the default.
83

83
00:04:43,090 --> 00:04:46,490
But you can actually also write platform specific
84

84
00:04:46,490 --> 00:04:49,743
Component files or code files in general.
85

85
00:04:50,810 --> 00:04:52,700
For example, if I wanna write
86

86
00:04:52,700 --> 00:04:55,920
an Android specific title Component version,
87

87
00:04:55,920 --> 00:05:00,920
I can copy this and name this file, title.android.JS.
88

88
00:05:02,290 --> 00:05:06,333
And then I could name the other Component title.iOS.JS.
89

89
00:05:08,910 --> 00:05:12,170
Now you don't need to adjust your imports.
90

90
00:05:12,170 --> 00:05:16,380
In the places where title gets used, you should make sure
91

91
00:05:16,380 --> 00:05:20,340
that you don't have .iOS or .android at the end,
92

92
00:05:20,340 --> 00:05:24,740
and since my IDE added the .iOS extension automatically
93

93
00:05:24,740 --> 00:05:28,340
here, I removed it, and you wanna make sure you remove that
94

94
00:05:28,340 --> 00:05:31,460
on all the screens where the title is used
95

95
00:05:31,460 --> 00:05:34,110
because you still import as if the file
96

96
00:05:34,110 --> 00:05:37,810
would just be named title.JS, and under the hood,
97

97
00:05:37,810 --> 00:05:42,200
React Native will pick the proper file based on the platform
98

98
00:05:42,200 --> 00:05:43,400
on which you're running.
99

99
00:05:44,250 --> 00:05:47,650
And so now we could go to title. Android and get rid
100

100
00:05:47,650 --> 00:05:52,650
of the platform API usage here and just set border,
101

101
00:05:52,690 --> 00:05:57,030
border width, to two here, because we know that this file
102

102
00:05:57,030 --> 00:06:01,660
with these style settings will only be executed for Android.
103

103
00:06:01,660 --> 00:06:05,880
And on the other hand on title iOS JS, we can also get rid
104

104
00:06:05,880 --> 00:06:10,880
of that code and always set border width to zero,
105

105
00:06:11,090 --> 00:06:14,300
or simply get rid of all the border settings altogether
106

106
00:06:14,300 --> 00:06:16,550
since we want no border.
107

107
00:06:16,550 --> 00:06:19,000
Now it might be overkill here for the title,
108

108
00:06:19,000 --> 00:06:22,320
where this simple switch was actually enough to achieve
109

109
00:06:22,320 --> 00:06:26,960
the desired result, but it is a feature you must know.
110

110
00:06:26,960 --> 00:06:29,190
And therefore, here, I'm showing this to you by building
111

111
00:06:29,190 --> 00:06:32,060
the same Component twice in different files
112

112
00:06:32,060 --> 00:06:36,223
with different file endings, with slightly different styles.
113

113
00:06:37,080 --> 00:06:39,083
And with that, if we reload everything,
114

114
00:06:40,200 --> 00:06:42,520
we still get the different styles as before,
115

115
00:06:42,520 --> 00:06:44,010
but now we achieve this
116

116
00:06:44,010 --> 00:06:46,873
with help of platform specific files.
117

117
00:06:47,740 --> 00:06:50,870
And you're not limited to Component files, you could also
118

118
00:06:50,870 --> 00:06:52,530
be importing from other files,
119

119
00:06:52,530 --> 00:06:54,900
like maybe different colors files,
120

120
00:06:54,900 --> 00:06:58,240
where one file defines the colors for Android
121

121
00:06:58,240 --> 00:07:01,770
and one file defines the colors for iOS.
122

122
00:07:01,770 --> 00:07:04,750
Then you would just add the different extensions here
123

123
00:07:04,750 --> 00:07:06,900
and you would make sure that you always import
124

124
00:07:06,900 --> 00:07:10,640
from just colors, so you don't include the extension here
125

125
00:07:10,640 --> 00:07:14,290
in the import statements, and then React Native would pick
126

126
00:07:14,290 --> 00:07:16,870
the different files for the different platforms,
127

127
00:07:16,870 --> 00:07:19,730
and you could easily set up different color palettes
128

128
00:07:19,730 --> 00:07:21,420
with a trick like this.
129

129
00:07:21,420 --> 00:07:24,340
And actually, why don't we give this a quick try?
130

130
00:07:24,340 --> 00:07:29,340
If I add colors. Android JS here, and then colors.iOS JS,
131

131
00:07:31,590 --> 00:07:34,420
we have to make sure that in all the places
132

132
00:07:34,420 --> 00:07:39,420
where we import colors, we don't have .iOS at the end,
133

133
00:07:40,270 --> 00:07:43,570
so we wanna make sure that we search for all the imports
134

134
00:07:43,570 --> 00:07:48,210
and we never have colors.iOS or colors. Android here,
135

135
00:07:48,210 --> 00:07:52,570
but always just colors, that's really important.
136

136
00:07:52,570 --> 00:07:55,830
So we wanna search all those imports and get rid
137

137
00:07:55,830 --> 00:08:00,313
of these extensions here, which is what I'm doing here,
138

138
00:08:01,330 --> 00:08:04,130
so that ultimately, we can then set up
139

139
00:08:04,130 --> 00:08:07,573
different color palettes for the different platforms.
140

140
00:08:08,500 --> 00:08:12,020
So now with all those imports adjusted, we could say
141

141
00:08:12,020 --> 00:08:15,550
that for Android, maybe this primary color here
142

142
00:08:15,550 --> 00:08:20,160
should be green and this accent color should be,
143

143
00:08:20,160 --> 00:08:23,900
should maybe be this color here.
144

144
00:08:23,900 --> 00:08:28,120
Now that's probably ugly, but we can see that it's only used
145

145
00:08:28,120 --> 00:08:30,283
on Android and not on iOS.
146

146
00:08:31,150 --> 00:08:34,430
Now I will actually revert this because here I was happy
147

147
00:08:34,430 --> 00:08:37,750
with my colors on both platforms, and therefore here,
148

148
00:08:37,750 --> 00:08:41,580
of course, we don't need those different platform files,
149

149
00:08:41,580 --> 00:08:44,470
but it is worth noting that this feature exists,
150

150
00:08:44,470 --> 00:08:47,940
that it's not exclusive to Components and that you can use
151

151
00:08:47,940 --> 00:08:50,660
this feature to define different Components,
152

152
00:08:50,660 --> 00:08:54,260
different styles, different colors and different code,
153

153
00:08:54,260 --> 00:08:57,243
in general, for the different platforms.